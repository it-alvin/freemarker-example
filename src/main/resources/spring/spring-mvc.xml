<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- 设置使用注解的类所在的jar包 -->
    <context:component-scan base-package="com.alvin.**.*controller"/>

    <mvc:resources location="/static/" mapping="/static/**" cache-period="3600"/>

    <!-- - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver, - and
      uses the requested media type (determined by the path extension) to pick a matching view. - When the media type is 'text/html',
      it will delegate to the InternalResourceViewResolver's JstlView, - otherwise to the BeanNameViewResolver. -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager"/>

        <property name="viewResolvers">
            <list>
                <!-- Used here for 'xml' and 'atom' views -->
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
                    <property name="order" value="0"/>
                </bean>

                <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
                    <property name="cache" value="false"/>
                    <property name="prefix" value=""/>
                    <property name="suffix" value=".ftl"/>
                    <property name="viewNames" value="ftls/*"/>
                    <property name="contentType" value="text/html"/>
                    <property name="order" value="1"/>
                    <property name="exposeRequestAttributes" value="true" />
                    <property name="exposeSessionAttributes" value="true" />
                    <property name="exposeSpringMacroHelpers" value="true" />
                    <property name="requestContextAttribute" value="request" />
                </bean>

                <!-- Default viewClass: JSTL view (JSP with html output) -->
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="prefix" value="/WEB-INF/"/>
                    <property name="suffix" value=".jsp"/>
                    <property name="viewNames" value="jsps/*"/>
                    <property name="order" value="2"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- Simple strategy: only path extension is taken into account -->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <!--     <profiles name="favorParameter" value="true" />
            <profiles name="parameterName" value="mediaType" /> -->
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="text/html"/>
        <property name="useJaf" value="false"/>

        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
                <entry key="atom" value="application/atom+xml"/>
            </map>
        </property>
    </bean>

    <!-- freemarker的配置 -->
    <bean id="freemarkerProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations" value="classpath:profiles/freemarker.properties"/>
    </bean>
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/"/>
        <property name="freemarkerSettings" ref="freemarkerProperties"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
                <entry key="html_escape" value-ref="fmHtmlEscape"/>
            </map>
        </property>
    </bean>
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
    <bean id="fmHtmlEscape" class="freemarker.template.utility.HtmlEscape"/>

    <bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <!-- Default charset -->
        <property name="charset" value="UTF-8"/>
        <!-- Default dateFormat -->
        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
        <!-- Feature -->
        <!-- <profiles name="features"> <list> <value>Your feature</value> </list> </profiles> SerializerFeature <profiles name="serializerFeatures">
          <list> <value>Your serializer feature</value> </list> </profiles> Global SerializeFilter <profiles name="serializeFilters">
          <list> <ref bean="Your serializer filter"/> </list> </profiles> Class Level SerializeFilter <profiles name="classSerializeFilters">
          <map> <entry key="Your filter class" value-ref="Your serializer filter"/> </map> </profiles> -->
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <!-- MediaTypes -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json</value>
                    </list>
                </property>
                <!-- FastJsonConfig -->
                <property name="fastJsonConfig" ref="fastJsonConfig"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
</beans>